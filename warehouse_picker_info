

We need an application to handle the picking of items from a warehouse distribution centre.

Our warehouse has three rows of racking (racks 'a, 'b', and 'c') located around a central loading bay where the fork-lift trucks manoeuvre - no pedestrians allowed!

Each row of racking has ten bays (numbered 1 to 10). The racks are arranged in a "U" shape, with the warehouse-pickers' entrance to the warehouse by rack 'a', bay '10', and the exit by rack 'b', bay '10'.

Here's an ASCII-art illustration to help visualize (but you must've been to a Scandinavian furniture store... you know how it looks):

>     c1 c2 c3 c4 c5 c6 c7 c8 c9 c10
>
> a1    __________________________   b1
> a2   |                         |   b2
> a3   |                         |   b3
> a4   | Loading bay...          |   b4
> a5   |                         |   b5
> a6   |                         |   b6
> a7   | Can't walk here.        |   b7
> a8   |                         |   b8
> a9   |                         |   b9
> a10  |                         |   b10
>
> >> entrance                     >> exit
Our inventory is distributed amongst the bays, in no particular order.

Product Bay
bath fizzers  b7
blouse  a3
bookmark  a7
candy wrapper c8
chalk c3
cookie jar  b10
deodorant b9
drill press c2
face wash c6
glow stick  a9
hanger  a4
leg warmers c10
model car a8
nail filer  b5
needle  a1
paint brush c7
photo album b4
picture frame b3
rubber band a10
rubber duck a5
rusty nail  c1
sharpie b2
shoe lace c9
shovel  a6
stop sign a2
thermometer c5
tyre swing  b1
tissue box  b8
tooth paste b6
word search c4
Your job is to produce an app that does the following:

Single bay/item

Given a bay, returns the item in that bay

given "b5", should return 'nail filer'
Given an item return the bay that it is in.

given "nail filer" should return "b5"
Multiple bays/items

Given a list of bays, list the items in those bays

given "b5, b10, and b6", determine that the products are "nail filer, cookie jar, and tooth paste"
Given a list of items find the bays.

given "shoe lace, rusty nail, leg warmers", determine that those items need to be collected from "c1, c9, and c10"
Advanced

Given a list of bays, list the items in those bays, and calculate the distance from the two furthest apart bays. For instance:

given "b5, b10, and b6", determine that the products are "nail filer, cookie jar, and tooth paste", and they're five bays apart
given "b3, c7, c9 and a3", determine that the products are "picture frame, paint brush, shoe lace, and blouse", and they're 15 bays apart.)
Given a list of products, find the bays that need to be visited, and order them in the order they need to be visited from entrance to exit. For instance:

given "shoe lace, rusty nail, leg warmers", determine that those items need to be collected from "c1, c9, and c10"
given "hanger, deodorant, candy wrapper, rubber band", determine that those items need to be collected from "a10, a4, c8, and b9"
Think about what we have been doing in class, writing our desired behavoiur first. Making it fail then writing the functionality. See if you can follow this methodology. Ultimatly, however, try to get it working!

Further considerations( Don't try to implement, just something to think about. )

Imagine that our warehouse had another rack built, opposite rack 'c', so now our warehouse forms a circular route. How would this impact the calculation of ordering the pick-list routes, and the distances between any two given bays? What amount of changes would you need to make to your solution to support this new requirement?



a10 rubber band
a9 glow stick  
a8 model car 
a7 = {bookmark}  
a6 shovel  
a5 rubber duck 
a4 hanger  
a3 = {blouse}  
a2 stop sign 
a1 needle  

 
c1 rusty nail  
c2 drill press 
c3 chalk 
c4 word search 
c5 thermometer 
c6 face wash 
c7 paint brush 
c8 candy wrapper 
c9 shoe lace 
c10 leg warmers 

b1 tyre swing  
b2 sharpie 
b3 picture frame 
b4 photo album 
b5 nail filer  
b6 tooth paste 
b7 ={ bath_fizzers } 
b8 tissue box  
b9 deodorant 
b10 cookie jar  